name: Terraform Workflow

on:
  push:
    branches:
      - testing  # You can change this to match the branch you want to trigger the workflow
  pull_request:
    branches:
      - testing  # Same here for PR triggers

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_LOG: DEBUG
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Decode Google Cloud credentials
        run: echo "${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}" | base64 -d > service-account-key.json

      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=service-account-key.json" >> $GITHUB_ENV

      - name: Initialize Terraform
        run: terraform init

  fmt:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Run terraform fmt check
        run: terraform fmt -check

  validate:
    runs-on: ubuntu-latest
    needs: fmt
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Run terraform validate
        run: terraform validate

  plan:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Run terraform plan
        run: terraform plan -out=tfplan

      - name: Upload Terraform plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan

  apply:
    runs-on: ubuntu-latest
    needs: plan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Download Terraform plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: tfplan

      - name: Run terraform apply
        run: terraform apply -auto-approve tfplan

  cleanup:
    runs-on: ubuntu-latest
    needs: apply
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Run terraform destroy
        run: terraform destroy -auto-approve
